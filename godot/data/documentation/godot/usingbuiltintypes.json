{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All builtin types in Swift are structs with copy on write. This means that you can pass your objects around without the fear of interfering with other parts of your code."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following code, even if "},{"type":"codeVoice","code":"negatives"},{"type":"text","text":" is initialized with "},{"type":"codeVoice","code":"positives"},{"type":"text","text":", the data is copied as soon as it is modified:"}]},{"type":"codeListing","syntax":"swift","code":["var positives = GodotArray()","positives.append(3)","","var negatives = positives","negatives.removeAll()","negatives.append(-5)","","print(positives)","\/\/ Prints \"[3]\"","print(negative)","\/\/ Prints \"[-5]\""]},{"anchor":"Collections","level":3,"type":"heading","text":"Collections"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All Godot collections conform to many Swift collection protocols, like "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" or "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":". This enables some cool things like:"}]},{"type":"codeListing","syntax":"swift","code":["let values: GodotArray = [1, 2, 3, 4, 5]","let strings = values","    .filter { $0 > 3 }","    .map { \"index \" + GodotString(describing: $0) }","","print(strings)","\/\/ Prints \"[\"index 4\", \"index 5\"]\""]},{"anchor":"GodotArray-and-GodotTypedArray","level":4,"type":"heading","text":"GodotArray and GodotTypedArray"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Godot\/documentation\/Godot\/GodotArray"},{"type":"text","text":" is a collection type holding "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Godot\/documentation\/Godot\/Variant"},{"type":"text","text":" values. Variants can hold many types of values, thus making "},{"type":"codeVoice","code":"GodotArray"},{"type":"text","text":" a collection with undefined elements."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Godot\/documentation\/Godot\/GodotTypedArray"},{"type":"text","text":" to bound the elements to a given type."}]},{"anchor":"Signals-and-Callables","level":3,"type":"heading","text":"Signals and Callables"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Swift, signals and callables are handled through the concept of emitters and receivers. An emitter emits a signal and a receiver, acting as a callable, receives the signal. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Godot\/documentation\/Godot\/Emitter(signal:args:)"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Godot\/documentation\/Godot\/Receiver()"},{"type":"text","text":" to learn more."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/godot\/usingbuiltintypes"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Godot\/documentation\/Godot\/UsingBuiltinTypes","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Use builtin types such as collections and math types"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Using builtin types","role":"article","modules":[{"name":"Godot"}]},"hierarchy":{"paths":[["doc:\/\/Godot\/documentation\/Godot"]]},"seeAlsoSections":[{"title":"Interacting with Godot","identifiers":["doc:\/\/Godot\/documentation\/Godot\/UsingRandomNumberGenerator","doc:\/\/Godot\/documentation\/Godot\/gdPrint(_:separator:)","doc:\/\/Godot\/documentation\/Godot\/gdPrintError(_:separator:)","doc:\/\/Godot\/documentation\/Godot\/Real"],"generated":true}],"references":{"doc://Godot/documentation/Godot/Emitter(signal:args:)":{"role":"symbol","title":"Emitter(signal:args:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Emitter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"args"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type)...)"}],"abstract":[{"type":"text","text":"Converts a Swift struct into a Godot signal."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Emitter(signal:args:)","kind":"symbol","type":"topic","url":"\/documentation\/godot\/emitter(signal:args:)"},"doc://Godot/documentation/Godot/GodotArray":{"role":"symbol","title":"GodotArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GodotArray"}],"abstract":[],"identifier":"doc:\/\/Godot\/documentation\/Godot\/GodotArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GodotArray"}],"url":"\/documentation\/godot\/godotarray"},"doc://Godot/documentation/Godot/UsingRandomNumberGenerator":{"role":"article","title":"Generating randomness","abstract":[{"type":"text","text":"Generate random numbers using the Godot RandomNumberGenerator class."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/UsingRandomNumberGenerator","kind":"article","type":"topic","url":"\/documentation\/godot\/usingrandomnumbergenerator"},"doc://Godot/documentation/Godot/Real":{"role":"symbol","title":"Real","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Real"}],"abstract":[{"type":"text","text":"A floating-point value type that depends on the Godot build configuration."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Real","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Real"}],"url":"\/documentation\/godot\/real"},"doc://Godot/documentation/Godot/gdPrintError(_:separator:)":{"role":"symbol","title":"gdPrintError(_:separator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"gdPrintError"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Writes the textual representations of the given items into the Godot"},{"type":"text","text":" "},{"type":"text","text":"output as error."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/gdPrintError(_:separator:)","kind":"symbol","type":"topic","url":"\/documentation\/godot\/gdprinterror(_:separator:)"},"godot-swift_logo.png":{"alt":"A technology icon representing Godot Swift","type":"image","identifier":"godot-swift_logo.png","variants":[{"url":"\/images\/godot-swift_logo@2x.png","traits":["2x","light"]}]},"doc://Godot/documentation/Godot/Receiver()":{"role":"symbol","title":"Receiver()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Receiver"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Converts a Swift function into a Godot signal receiver."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Receiver()","kind":"symbol","type":"topic","url":"\/documentation\/godot\/receiver()"},"doc://Godot/documentation/Godot":{"images":[{"type":"icon","identifier":"godot-swift_logo.png"}],"role":"collection","title":"Godot","abstract":[{"type":"text","text":"A library for interacting with Godot using Swift code."}],"identifier":"doc:\/\/Godot\/documentation\/Godot","kind":"symbol","type":"topic","url":"\/documentation\/godot"},"doc://Godot/documentation/Godot/gdPrint(_:separator:)":{"role":"symbol","title":"gdPrint(_:separator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"gdPrint"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Writes the textual representations of the given items into the Godot"},{"type":"text","text":" "},{"type":"text","text":"output."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/gdPrint(_:separator:)","kind":"symbol","type":"topic","url":"\/documentation\/godot\/gdprint(_:separator:)"},"doc://Godot/documentation/Godot/GodotTypedArray":{"role":"symbol","title":"GodotTypedArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GodotTypedArray"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GodotTypedArray"},{"type":"text","text":" is a Godot array that is constrained by a type."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/GodotTypedArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GodotTypedArray"}],"url":"\/documentation\/godot\/godottypedarray"},"doc://Godot/documentation/Godot/Variant":{"role":"symbol","title":"Variant","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variant"}],"abstract":[{"type":"text","text":"A type used to transform Swift types to and from Godot types."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Variant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"url":"\/documentation\/godot\/variant"}}}