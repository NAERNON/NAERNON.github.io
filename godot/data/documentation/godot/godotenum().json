{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","identifier":"doc:\/\/Godot\/documentation\/Godot\/VariantConvertible","preciseIdentifier":"s:5Godot18VariantConvertibleP","text":"VariantConvertible"},{"kind":"text","text":", names: named(variantType), named(makeVariant), named(fromCompatibleVariant), named(fromVariant), named(godotExposableValues)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"GodotEnum"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro conforms the attached enum to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Godot\/documentation\/Godot\/VariantConvertible"},{"type":"text","text":" protocol, enabling the enum to be used as a type for function parameters and variables for Godot."}]},{"anchor":"Naming-convention","level":3,"type":"heading","text":"Naming convention"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each case name takes the name of the enum, followed by the case itself, converted to snake case and uppercased."},{"type":"text","text":" "},{"type":"text","text":"See the example below."}]},{"anchor":"Usage","level":3,"type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Godot enum must have an "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":" "},{"type":"codeVoice","code":"RawType"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The following code transforms the enum into an enum Godot is capable of manipulating:"}]},{"type":"codeListing","syntax":"swift","code":["@GodotEnum public enum CharacterEmotion: Int64 {","    \/\/ CHARACTER_EMOTION_HAPPY","    case happy","    \/\/ CHARACTER_EMOTION_NOT_SO_HAPPY","    case notSoHappy","    \/\/ CHARACTER_EMOTION_SAD","    case sad","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The enum can then be used as a type for Godot:"}]},{"type":"codeListing","syntax":"swift","code":["@Exposable public class Character: Node {","    \/\/ This variable is exposed to Godot","    public var emotion: CharacterEmotion = .happy","}"]},{"anchor":"Definition-inside-an-exposable-class","level":3,"type":"heading","text":"Definition inside an exposable class"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the enum is defined inside an exposable class, the enum cases"},{"type":"text","text":" "},{"type":"text","text":"will automatically be accessible from the Godot editor."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/godot\/godotenum()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Godot\/documentation\/Godot\/GodotEnum()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Converts a Swift enum into an enum usable by Godot."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"GodotEnum"},{"kind":"text","text":"()"}],"title":"GodotEnum()","roleHeading":"Macro","role":"symbol","symbolKind":"macro","externalID":"s:5Godot0A4Enumyycfm","modules":[{"name":"Godot"}]},"hierarchy":{"paths":[["doc:\/\/Godot\/documentation\/Godot"]]},"seeAlsoSections":[{"title":"Creating custom classes","identifiers":["doc:\/\/Godot\/documentation\/Godot\/CreatingCustomClass","doc:\/\/Godot\/documentation\/Godot\/Exposable()","doc:\/\/Godot\/documentation\/Godot\/ExposableMember(_:)","doc:\/\/Godot\/documentation\/Godot\/Emitter(signal:args:)","doc:\/\/Godot\/documentation\/Godot\/Receiver()","doc:\/\/Godot\/documentation\/Godot\/GodotOptionSet()"],"generated":true}],"references":{"doc://Godot/documentation/Godot/GodotOptionSet()":{"role":"symbol","title":"GodotOptionSet()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"GodotOptionSet"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Converts a Swift struct into an option set usable by Godot."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/GodotOptionSet()","kind":"symbol","type":"topic","url":"\/documentation\/godot\/godotoptionset()"},"doc://Godot/documentation/Godot/ExposableMember(_:)":{"role":"symbol","title":"ExposableMember(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExposableMember"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Object","preciseIdentifier":"s:5Godot6ObjectC"},{"kind":"text","text":".Type)"}],"abstract":[{"type":"text","text":"Enables a member to be exposed to the Godot editor."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/ExposableMember(_:)","kind":"symbol","type":"topic","url":"\/documentation\/godot\/exposablemember(_:)"},"doc://Godot/documentation/Godot":{"images":[{"type":"icon","identifier":"godot-swift_logo.png"}],"role":"collection","title":"Godot","abstract":[{"type":"text","text":"A library for interacting with Godot using Swift code."}],"identifier":"doc:\/\/Godot\/documentation\/Godot","kind":"symbol","type":"topic","url":"\/documentation\/godot"},"doc://Godot/documentation/Godot/Receiver()":{"role":"symbol","title":"Receiver()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Receiver"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Converts a Swift function into a Godot signal receiver."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Receiver()","kind":"symbol","type":"topic","url":"\/documentation\/godot\/receiver()"},"doc://Godot/documentation/Godot/VariantConvertible":{"role":"symbol","title":"VariantConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantConvertible"}],"abstract":[{"type":"text","text":"A type that can be converted from, and to, a variant."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/VariantConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantConvertible"}],"url":"\/documentation\/godot\/variantconvertible"},"godot-swift_logo.png":{"alt":"A technology icon representing Godot Swift","type":"image","identifier":"godot-swift_logo.png","variants":[{"url":"\/images\/godot-swift_logo@2x.png","traits":["2x","light"]}]},"doc://Godot/documentation/Godot/Exposable()":{"role":"symbol","title":"Exposable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exposable"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Enables a custom Godot class"},{"type":"text","text":" "},{"type":"text","text":"to be exposed to the Godot editor."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Exposable()","kind":"symbol","type":"topic","url":"\/documentation\/godot\/exposable()"},"doc://Godot/documentation/Godot/Emitter(signal:args:)":{"role":"symbol","title":"Emitter(signal:args:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Emitter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"args"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type)...)"}],"abstract":[{"type":"text","text":"Converts a Swift struct into a Godot signal."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/Emitter(signal:args:)","kind":"symbol","type":"topic","url":"\/documentation\/godot\/emitter(signal:args:)"},"doc://Godot/documentation/Godot/GodotEnum()":{"role":"symbol","title":"GodotEnum()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"GodotEnum"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Converts a Swift enum into an enum usable by Godot."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/GodotEnum()","kind":"symbol","type":"topic","url":"\/documentation\/godot\/godotenum()"},"doc://Godot/documentation/Godot/CreatingCustomClass":{"role":"article","title":"Creating a custom Godot class","abstract":[{"type":"text","text":"Create a custom class that can be exposed to Godot."}],"identifier":"doc:\/\/Godot\/documentation\/Godot\/CreatingCustomClass","kind":"article","type":"topic","url":"\/documentation\/godot\/creatingcustomclass"}}}